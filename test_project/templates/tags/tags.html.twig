<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>tags</title>
    <link rel="stylesheet" href="{{ asset('css/tags.css') }}">
</head>
<body>
    <div class="container">
        <header>
            <div class="header-left">
                <h1>üìù Blog</h1>
                <p class="subtitle">Sharing thoughts and ideas</p>
            </div>
            <button class="create-btn" onclick="openModal()">
                <span>‚ú®</span> Create tag
            </button>
        </header>

        <!-- Tags Filter -->
        <div class="tags-filter">
            <div>
                <a style="text-decoration:none;color:white;" href="/" />Go to posts page</a>
            </div>

        </div>

        {% if tags is defined and tags|length > 0 %}
            <div class="tags-grid" id="tagsGrid">
                {% for tag in tags %}
                    <article class="tag" data-tags="{% if tag.tags is defined %}{% for tag in tag.tags %}{{ tag.name ?? tag }}{% if not loop.last %},{% endif %}{% endfor %}{% endif %}">
                        <div class="tag__header">                        
                            <h2>
                                <div>{{ tag.name }}</div>
                            </h2>
                        </div>
                        
                        <div class="tag-meta">
                            {% if tag.createdAt is defined %}
                                {{ tag.createdAt|date('M d, Y H:i') }}
                            {% endif %}
                        </div>
                        
                        {% if tag.content is defined %}
                            <div class="tag-content">
                                {{ tag.content|slice(0, 200) }}{% if tag.content|length > 200 %}...{% endif %}
                            </div>
                        {% endif %}
                        
                        {% if tag.tags is defined and tag.tags is not empty %}
                            <div class="tag-tags">
                                {% for tag in tag.tags %}
                                    <span class="tag">{{ tag.name ?? tag }}</span>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </article>
                {% endfor %}
            </div>

            {% if lastPage > 1 %}
                <div class="pagination-wrapper">
                    <div class="pagination-info">
                        Page {{ currentPage }} of {{ lastPage }}
                    </div>
                    <div class="pagination">
                        {% if currentPage > 1 %}
                            <a href="?page={{ currentPage - 1 }}" class="page-link prev-next">
                                ‚Üê Previous
                            </a>
                        {% else %}
                            <span class="page-link prev-next disabled">
                                ‚Üê Previous
                            </span>
                        {% endif %}

                        {% if currentPage > 3 %}
                            <a href="?page=1" class="page-link">1</a>
                            {% if currentPage > 4 %}
                                <span class="page-dots">...</span>
                            {% endif %}
                        {% endif %}

                        {% for page in range(max(1, currentPage - 2), min(lastPage, currentPage + 2)) %}
                            {% if page == currentPage %}
                                <span class="page-link active">{{ page }}</span>
                            {% else %}
                                <a href="?page={{ page }}" class="page-link">{{ page }}</a>
                            {% endif %}
                        {% endfor %}

                        {% if currentPage < lastPage - 2 %}
                            {% if currentPage < lastPage - 3 %}
                                <span class="page-dots">...</span>
                            {% endif %}
                            <a href="?page={{ lastPage }}" class="page-link">{{ lastPage }}</a>
                        {% endif %}

                        {% if currentPage < lastPage %}
                            <a href="?page={{ currentPage + 1 }}" class="page-link prev-next">
                                Next ‚Üí
                            </a>
                        {% else %}
                            <span class="page-link prev-next disabled">
                                Next ‚Üí
                            </span>
                        {% endif %}
                    </div>
                </div>
            {% endif %}
        {% else %}
            <div class="empty-state">
                <div class="empty-state-icon">ü§î</div>
                <p>No tags yet</p>
            </div>
        {% endif %}
    </div>

    <div class="modal" id="createModal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Create New tag</h2>
                <button class="close-btn" onclick="closeModal()">&times;</button>
            </div>
            <form action="/api/tags" method="tag" id="createtagForm">
                <div class="form-group">
                    <label for="title">Name *</label>
                    <input type="text" id="title" name="title" required placeholder="Enter tag name">
                    <div class="error-content" id="error-tags"></div>                    
                </div>
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create tag</button>
                </div>
            </form>
        </div>
    </div>

    {% include 'components/success_modal.html.twig' with {
        'id': 'successModal',
        'title': 'Success!',
        'message': 'Your tag has been added successfully',
        'buttonText': 'Got it!',
        'onClose': 'closeSuccessModal()'
    } %}

    <script>
        function showSuccessModal() {
            document.getElementById('successModal').classList.add('active');
        }

        function closeSuccessModal() {
            document.getElementById('successModal').classList.remove('active');
            setTimeout(() => {
                window.location.reload();
            }, 300);
        }

        function openModal() {
            document.getElementById('createModal').classList.add('active');
        }

        function closeModal() {
            document.getElementById('createModal').classList.remove('active');
            document.getElementById('createtagForm').reset();
        }

        document.getElementById('createModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });

        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeModal();
                closeDeleteModal();
            }
        });

        function filterByTag(tagName) {
            document.querySelectorAll('.tag-filter').forEach(filter => {
                filter.classList.remove('active');
            });
            document.querySelector(`[data-tag="${tagName}"]`).classList.add('active');

            const tags = document.querySelectorAll('.tag');
        }

        document.getElementById('createtagForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);

            const data = {
                name: formData.get('title'),
            };

            try {
                const response = await fetch('/api/tags', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    closeModal();
                    showSuccessModal()
                } 


                const errorData = await response.json();
                
                if(response.status === 422) {

                    const el = document.getElementById(`error-tags`);

                    el.textContent = errorData.description;
                    el.style.color = 'red';
                }
                
            } catch (error) {
                alert('Error creating tag. Please try again.');
            }
        });
    </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>tags</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 40px 20px;
        }

        .container {
            max-width: 1100px;
            margin: 0 auto;
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 40px;
            color: white;
            flex-wrap: wrap;
            gap: 20px;
        }

        .header-left {
            flex: 1;
        }

        h1 {
            font-size: 3em;
            font-weight: 800;
            margin-bottom: 5px;
            text-shadow: 0 2px 20px rgba(0,0,0,0.2);
        }

        .subtitle {
            font-size: 1.2em;
            opacity: 0.9;
        }

        .create-btn {
            background: white;
            color: #667eea;
            padding: 12px 28px;
            border-radius: 12px;
            font-weight: 700;
            font-size: 1em;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .create-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0,0,0,0.3);
        }

        .tags-filter {
            background: rgba(255,255,255,0.15);
            backdrop-filter: blur(10px);
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 30px;
        }

        .tags-filter-header {
            color: white;
            font-weight: 700;
            margin-bottom: 15px;
            font-size: 1.1em;
        }

        .tags-list {
            display: flex;
            flex-wrap: wrap;
            gap: 12px;
        }

        .tag-filter {
            background: rgba(255,255,255,0.2);
            color: white;
            padding: 8px 18px;
            border-radius: 20px;
            font-size: 0.9em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .tag-filter:hover {
            background: rgba(255,255,255,0.3);
            transform: scale(1.05);
        }

        .tag-filter.active {
            background: white;
            color: #667eea;
            border-color: white;
        }

        .tags-grid {
            display: grid;
            gap: 30px;
            margin-bottom: 40px;
        }

        .tag {
            background: white;
            border-radius: 20px;
            padding: 35px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.15);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .tag::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

        .tag:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 50px rgba(0,0,0,0.2);
        }

        .tag h2 {
            font-size: 1.8em;
            margin-bottom: 15px;
            color: #2d3748;
            line-height: 1.3;
        }

        .tag h2 a {
            color: inherit;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .tag h2 a:hover {
            color: #667eea;
        }

        .tag-meta {
            display: flex;
            align-items: center;
            gap: 15px;
            color: #f0f0f0ff;
            font-size: 0.9em;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e2e8f0;
        }

        .tag-meta::before {
            content: '📅';
            font-size: 1.2em;
        }

        .tag-content {
            color: #4a5568;
            font-size: 1.05em;
            line-height: 1.7;
            margin-bottom: 20px;
        }

        .tag-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 20px;
        }

        .tag {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 6px 14px;
            border-radius: 20px;
            font-size: 0.85em;
            font-weight: 600;
            transition: transform 0.2s ease;
        }

        .tag:hover {
            transform: scale(1.05);
        }

        .empty-state {
            text-align: center;
            padding: 80px 20px;
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.15);
        }

        .empty-state-icon {
            font-size: 4em;
            margin-bottom: 20px;
        }

        .empty-state p {
            font-size: 1.3em;
            color: #718096;
        }

        /* Pagination Styles */
        .pagination-wrapper {
            background: rgba(255,255,255,0.15);
            backdrop-filter: blur(10px);
            padding: 25px;
            border-radius: 15px;
            margin-top: 40px;
        }

        .pagination-info {
            text-align: center;
            color: white;
            margin-bottom: 20px;
            font-size: 1em;
            opacity: 0.9;
        }

        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            flex-wrap: wrap;
        }

        .page-link {
            background: rgba(255,255,255,0.2);
            color: white;
            padding: 10px 16px;
            border-radius: 10px;
            text-decoration: none;
            font-weight: 600;
            font-size: 0.95em;
            transition: all 0.3s ease;
            border: 2px solid transparent;
            min-width: 44px;
            text-align: center;
        }

        .page-link:hover {
            background: rgba(255,255,255,0.3);
            transform: translateY(-2px);
        }

        .page-link.active {
            background: white;
            color: #667eea;
            border-color: white;
            cursor: default;
            transform: none;
        }

        .page-link.disabled {
            opacity: 0.4;
            cursor: not-allowed;
            pointer-events: none;
        }

        .page-link.prev-next {
            padding: 10px 20px;
            background: white;
            color: #667eea;
        }

        .page-link.prev-next:hover {
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        .page-dots {
            color: white;
            opacity: 0.6;
            padding: 0 5px;
        }

        /* Create Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.7);
            backdrop-filter: blur(5px);
            z-index: 1000;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .modal.active {
            display: flex;
        }

        .modal-content {
            background: white;
            border-radius: 20px;
            padding: 40px;
            max-width: 600px;
            width: 100%;
            max-height: 90vh;
            overflow-y: auto;
            position: relative;
            animation: slideUp 0.3s ease;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }

        .modal-header h2 {
            font-size: 2em;
            color: #2d3748;
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 2em;
            color: #718096;
            cursor: pointer;
            transition: color 0.3s ease;
            padding: 0;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .close-btn:hover {
            color: #2d3748;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #2d3748;
            font-weight: 600;
            font-size: 0.95em;
        }

        .form-group input,
        .form-group textarea,
        .form-group select {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 1em;
            font-family: inherit;
            transition: all 0.3s ease;
        }

        .form-group input:focus,
        .form-group textarea:focus,
        .form-group select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102,126,234,0.1);
        }

        .form-group textarea {
            resize: vertical;
            min-height: 150px;
        }

        .form-actions {
            display: flex;
            gap: 15px;
            margin-top: 30px;
        }

        .btn {
            flex: 1;
            padding: 14px 24px;
            border: none;
            border-radius: 10px;
            font-size: 1em;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102,126,234,0.4);
        }

        .btn-secondary {
            background: #e2e8f0;
            color: #4a5568;
        }

        .btn-secondary:hover {
            background: #cbd5e0;
        }

        /* Delete Modal Styles */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            backdrop-filter: blur(5px);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .modal-overlay.active .delete-modal-content {
            transform: scale(1);
            opacity: 1;
        }

        .delete-modal-content {
            background: white;
            border-radius: 20px;
            padding: 40px;
            max-width: 450px;
            width: 90%;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            transform: scale(0.9);
            opacity: 0;
            transition: all 0.3s ease;
            position: relative;
        }

        .modal-icon {
            width: 80px;
            height: 80px;
            margin: 0 auto 25px;
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 40px;
            animation: shake 0.5s ease;
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-10px) rotate(-5deg); }
            75% { transform: translateX(10px) rotate(5deg); }
        }

        .modal-title {
            font-size: 1.8em;
            color: #2d3748;
            margin-bottom: 15px;
            text-align: center;
            font-weight: 700;
        }

        .modal-text {
            color: #718096;
            font-size: 1.1em;
            text-align: center;
            margin-bottom: 30px;
            line-height: 1.6;
        }

        .modal-buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
        }

        .modal-btn {
            padding: 14px 32px;
            border: none;
            border-radius: 12px;
            font-size: 1em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

        .modal-btn-cancel {
            background: #e2e8f0;
            color: #4a5568;
        }

        .modal-btn-cancel:hover {
            background: #cbd5e0;
            transform: translateY(-2px);
        }

        .modal-btn-delete {
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            color: white;
        }

        .modal-btn-delete:hover {
            background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(239, 68, 68, 0.4);
        }

        .tag__header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
        }

        .delete-btn {
            background: #ef4444;
            border: none;
            color: white;
            padding: 8px 12px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            flex-shrink: 0;
        }

        .delete-btn:hover {
            background: #dc2626;
            transform: scale(1.05);
        }

        @media (max-width: 768px) {
            h1 {
                font-size: 2em;
            }

            .tag {
                padding: 25px;
            }

            .tag h2 {
                font-size: 1.4em;
            }

            .modal-content {
                padding: 25px;
            }

            header {
                flex-direction: column;
                align-items: flex-start;
            }

            .pagination {
                gap: 5px;
            }

            .page-link {
                padding: 8px 12px;
                min-width: 40px;
                font-size: 0.9em;
            }
        }

        @media (max-width: 500px) {
            .delete-modal-content {
                padding: 30px 25px;
            }

            .modal-buttons {
                flex-direction: column;
            }

            .modal-btn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="header-left">
                <h1>📝 Blog</h1>
                <p class="subtitle">Sharing thoughts and ideas</p>
            </div>
            <button class="create-btn" onclick="openModal()">
                <span>✨</span> Create tag
            </button>
        </header>

        <!-- Tags Filter -->
        <div class="tags-filter">
            <div>
                <a style="text-decoration:none;color:white;" href="/" />Go to posts page</a>
            </div>

        </div>

        {% if tags is defined and tags|length > 0 %}
            <div class="tags-grid" id="tagsGrid">
                {% for tag in tags %}
                    <article class="tag" data-tags="{% if tag.tags is defined %}{% for tag in tag.tags %}{{ tag.name ?? tag }}{% if not loop.last %},{% endif %}{% endfor %}{% endif %}">
                        <div class="tag__header">                        
                            <h2>
                                <a href="/tags/{{ tag.id }}.html">{{ tag.name }}</a>
                            </h2>
                        </div>
                        
                        <div class="tag-meta">
                            {% if tag.createdAt is defined %}
                                {{ tag.createdAt|date('M d, Y H:i') }}
                            {% endif %}
                        </div>
                        
                        {% if tag.content is defined %}
                            <div class="tag-content">
                                {{ tag.content|slice(0, 200) }}{% if tag.content|length > 200 %}...{% endif %}
                            </div>
                        {% endif %}
                        
                        {% if tag.tags is defined and tag.tags is not empty %}
                            <div class="tag-tags">
                                {% for tag in tag.tags %}
                                    <span class="tag">{{ tag.name ?? tag }}</span>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </article>
                {% endfor %}
            </div>

            {% if lastPage > 1 %}
                <div class="pagination-wrapper">
                    <div class="pagination-info">
                        Page {{ currentPage }} of {{ lastPage }}
                    </div>
                    <div class="pagination">
                        {% if currentPage > 1 %}
                            <a href="?page={{ currentPage - 1 }}" class="page-link prev-next">
                                ← Previous
                            </a>
                        {% else %}
                            <span class="page-link prev-next disabled">
                                ← Previous
                            </span>
                        {% endif %}

                        {% if currentPage > 3 %}
                            <a href="?page=1" class="page-link">1</a>
                            {% if currentPage > 4 %}
                                <span class="page-dots">...</span>
                            {% endif %}
                        {% endif %}

                        {% for page in range(max(1, currentPage - 2), min(lastPage, currentPage + 2)) %}
                            {% if page == currentPage %}
                                <span class="page-link active">{{ page }}</span>
                            {% else %}
                                <a href="?page={{ page }}" class="page-link">{{ page }}</a>
                            {% endif %}
                        {% endfor %}

                        {% if currentPage < lastPage - 2 %}
                            {% if currentPage < lastPage - 3 %}
                                <span class="page-dots">...</span>
                            {% endif %}
                            <a href="?page={{ lastPage }}" class="page-link">{{ lastPage }}</a>
                        {% endif %}

                        {% if currentPage < lastPage %}
                            <a href="?page={{ currentPage + 1 }}" class="page-link prev-next">
                                Next →
                            </a>
                        {% else %}
                            <span class="page-link prev-next disabled">
                                Next →
                            </span>
                        {% endif %}
                    </div>
                </div>
            {% endif %}
        {% else %}
            <div class="empty-state">
                <div class="empty-state-icon">🤔</div>
                <p>No tags yet</p>
            </div>
        {% endif %}
    </div>

    <!-- Modal for Create tag -->
    <div class="modal" id="createModal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Create New tag</h2>
                <button class="close-btn" onclick="closeModal()">&times;</button>
            </div>
            <form action="/api/tags" method="tag" id="createtagForm">
                <div class="form-group">
                    <label for="title">Name *</label>
                    <input type="text" id="title" name="title" required placeholder="Enter tag name">
                </div>
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create tag</button>
                </div>
            </form>
        </div>
    </div>

    <script>

        function openModal() {
            document.getElementById('createModal').classList.add('active');
        }

        function closeModal() {
            document.getElementById('createModal').classList.remove('active');
            document.getElementById('createtagForm').reset();
        }

        document.getElementById('createModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });

        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeModal();
                closeDeleteModal();
            }
        });

        function filterByTag(tagName) {
            document.querySelectorAll('.tag-filter').forEach(filter => {
                filter.classList.remove('active');
            });
            document.querySelector(`[data-tag="${tagName}"]`).classList.add('active');

            const tags = document.querySelectorAll('.tag');
        }

        document.getElementById('createtagForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = {
                name: 'tagtest',
            };

            try {
                const response = await fetch('/api/tags', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    alert('tag created successfully!');
                    closeModal();
                    window.location.reload();
                } else {
                    alert('Error creating tag. Please try again.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error creating tag. Please try again.');
            }
        });
    </script>
</body>
</html>